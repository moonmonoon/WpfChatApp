<UserControl x:Class="WpfChatApp.CustomControls.Conversation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfChatApp.CustomControls"
             xmlns:viewmodels="clr-namespace:WpfChatApp.ViewModels"
             mc:Ignorable="d" Height="Auto" Width="Auto">
    <!--<UserControl.DataContext>
        <viewmodels:ViewModel/>
    </UserControl.DataContext>-->
    
    <UserControl.Resources>
        <Style x:Key="MessageTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
                    <Setter Property="Text" Value="{Binding ReceivedMessage}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                    <Setter Property="Text" Value="{Binding SentMessage}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ItemTemplate">
            <Button>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border 
                                        x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!--Reply Bubble-->
                                                <RowDefinition Height="Auto"/>
                                                <!--Message Bubble-->
                                                <RowDefinition/>
                                                <!--Message Time-->
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <!--Reply Bubble-->
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <!--Column Reply Button-->
                                                    <ColumnDefinition Width="Auto"/>
                                                    <!--Column Message Bubble-->
                                                    <ColumnDefinition/>
                                                    <!--Column Reply Button-->
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!--Message Bubble-->
                                                <Border Grid.Column="1"
                                                    Height="Auto" 
                                                    Width="Auto"
                                                    MinHeight="60"
                                                    VerticalAlignment="Center">
                                                    <Border.Style>
                                                        <!-- To change color of our bubble on message received and message sent -->
                                                        <Style TargetType="{x:Type Border}">
                                                            <!-- If msg is received -->
                                                            <Setter Property="CornerRadius" Value="30,30,30,0"/>
                                                            <Setter Property="Background" Value="#dce1de"/> 
                                                            <Setter Property="HorizontalAlignment" Value="Left"/> 
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                    <Setter Property="CornerRadius" Value="30,30,0,30"/>
                                                                    <Setter Property="Background" Value="#c5cae9"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <!--Message text-->
                                                    <DockPanel MaxHeight="700">
                                                        <TextBlock Style="{StaticResource MessageTextStyle}"/>
                                                    </DockPanel>
                                                </Border>

                                                <!--Reply Button-->
                                                <Button Grid.Column="2"
                                                        x:Name="ReplyButton"
                                                        Content="{StaticResource reply}"
                                                        Visibility="Collapsed"
                                                        Style="{StaticResource IconButtonStyle}"/>
                                            </Grid>

                                            <!--Message Time-->
                                            <TextBlock Grid.Row="2">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Margin" Value="0,10,20,0"/>
                                                        <Style.Triggers>
                                                            <!-- If msg is received show time on left bubble-->
                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
                                                                <Setter Property="Text" Value="{Binding MsgReceivedOn}"/>
                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                            </DataTrigger>
                                                            <!-- else on right-->
                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                <Setter Property="Text" Value="{Binding MsgSentOn}"/>
                                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                            <Setter TargetName="ReplyButton" Property="Grid.Column" Value="0"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ReplyButton" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <!-- why? do I set row definitions to 'Auto' in some rows..
            => when we want to show our hide any child element in row,
               the row height will be 0 if the child element is hidden 
               such as we are going to place searchbox inside this row,
               and we will hide it when no text is inside..
        -->
        <Grid.RowDefinitions>
            <!--Searchbox Row-->
            <RowDefinition Height="Auto"/>
            <!--Conversation Body-->
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Searchbox Row-->
        <Border 
            Background="#dce1de"
            CornerRadius="15"
            Margin="20"
            Height="50"
            x:Name="searchBoxBorder"
            FocusManager.FocusedElement="{Binding ElementName=searchQuery}" >

            <!--FocusManager.FocusedElement="{Binding ElementName=searchQuery}"
                            => to focus our textbox when border gets focused...-->
            <TextBox
                 Name="searchQuery"
                 Padding="12,0"
                 Background="Transparent"
                 BorderThickness="0"
                 VerticalAlignment="Stretch"
                 VerticalContentAlignment="Center"
                 Text="{Binding SearchConversationText, UpdateSourceTrigger=PropertyChanged}">
                <!--key Binding to search on 'Enter' key press-->
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding SearchConversationCommand}" Key="Return"/>
                </TextBox.InputBindings>
            </TextBox>

        </Border>

        <!--Body-->
        <!--To-Do: Add attached property to Auto-Scroll to bottom-->
        <ScrollViewer
            Background="WhiteSmoke"
            HorizontalScrollBarVisibility="Disabled"
            Grid.Row="1">
            <ItemsControl
                ItemsSource="{Binding FilteredConversations, UpdateSourceTrigger=PropertyChanged}"
                ItemTemplate="{StaticResource ItemTemplate}"
                Margin="15,0,0,0"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!--To-Do: Add animation-->
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
